/*
 June 21st, 2023
 Created by Derek Wang
 This frame is outputted when a user has finished a game.
 */


public class GameOver extends javax.swing.JFrame {
    //Declare int variables
    int userScore,  //Holds the score for user
         pinsLeft;  //Holds how many pins were left
    
    
    /**
     * Creates new form GameOver
     */
    public GameOver(int score, int pins) {
        initComponents();
        
        //Transfer pins and score values
        userScore = score;
        pinsLeft = pins;
        
        //Update labels
        updateLbl();
    }

    /*
    updateLbl
    
    This procedures uses a series of if statements to output a message depending on what the user's score was
    
    Parameters: none
    
    Returns: none    
    */
    public void updateLbl()
    {
        /*Check how many pins are left
        If 3 pins are left*/
        if (pinsLeft == 3)
        {
            //Change pins left and score labels messages
            lblPinsLeft.setText("          You had " + pinsLeft + " pins left which is so, so");
            lblScore.setText("      That gives you a score of " + userScore + ". Not bad.");
        }
        //If 2 pins are left
        else if (pinsLeft == 2)
        {
            //Change pins left and score labels messages
            lblPinsLeft.setText("     You had " + pinsLeft + " pins left which is above average!");
            lblScore.setText("  That gives you a score of " + userScore + ". Pretty good!");
        }
        //If only one pin is left and score is 50. There are two possible scores when one pin is remaining
        else if (pinsLeft == 1 && userScore == 50)
        {
            //Change pins left and score labels messages
            lblPinsLeft.setText("              You had " + pinsLeft + " pin left. Very good!");
            lblScore.setText("   That gives you a score of " + userScore + ". Great job!");
        }
        //If one pin is left but score is 100
        else if (pinsLeft == 1 && userScore == 100)
        {
            //Change pins left and score labels messages
            lblPinsLeft.setText("   You had " + pinsLeft + " pin left and it was in the same spot");
            lblScore.setText("   That gives you a score of " + userScore + ". Exceptional!");
        }
        //If 8 pins are remaining
        else if (pinsLeft == 8)
        {
            //Change pins left and score labels messages
            lblPinsLeft.setText("              You had " + pinsLeft + " pins left. Genius!");
            lblScore.setText("        That gives you a score of " + userScore + ". Prodigy!");
        }
        
        //All other cases
        else
        {
            //Change pins left and score labels messages
            lblPinsLeft.setText("      You had " + pinsLeft + " pins left which is below average");
            lblScore.setText("That gives you a score of " + userScore + ". Better luck next time!");
        }
    }
    
    /*
    openLeaderboard
    
    This procedure creates a leaderboard object and opens the frame
    
    Parameters: none
    
    Returns: none
    */
    public void openLeaderboard()
    {
        Leaderboard lBoard = new Leaderboard();  //Create leaderboard object
        lBoard.setVisible(true);  //Make frame visible
        lBoard.setAlwaysOnTop(true);  //Place leaderboard over main gameOver form
        lBoard.setDefaultCloseOperation(DISPOSE_ON_CLOSE);  //Change exit button to dispose to avoid closing program
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBackground = new javax.swing.JPanel();
        lblGameOver = new javax.swing.JLabel();
        lblScore = new javax.swing.JLabel();
        lblPinsLeft = new javax.swing.JLabel();
        lblIcon = new javax.swing.JLabel();
        btnKeepPlaying = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelBackground.setBackground(new java.awt.Color(255, 255, 255));

        lblGameOver.setFont(new java.awt.Font("Yu Gothic", 0, 24)); // NOI18N
        lblGameOver.setText("Game Over");

        lblScore.setFont(new java.awt.Font("Yu Gothic Medium", 0, 16)); // NOI18N

        lblPinsLeft.setFont(new java.awt.Font("Yu Gothic Medium", 0, 16)); // NOI18N

        lblIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iq.png"))); // NOI18N

        btnKeepPlaying.setFont(new java.awt.Font("Yu Gothic Medium", 0, 16)); // NOI18N
        btnKeepPlaying.setText("Continue");
        btnKeepPlaying.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeepPlayingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBackgroundLayout = new javax.swing.GroupLayout(panelBackground);
        panelBackground.setLayout(panelBackgroundLayout);
        panelBackgroundLayout.setHorizontalGroup(
            panelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBackgroundLayout.createSequentialGroup()
                .addGroup(panelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBackgroundLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblPinsLeft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblScore, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)))
                    .addGroup(panelBackgroundLayout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(lblGameOver))
                    .addGroup(panelBackgroundLayout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(lblIcon))
                    .addGroup(panelBackgroundLayout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(btnKeepPlaying, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelBackgroundLayout.setVerticalGroup(
            panelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblGameOver)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPinsLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblScore, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnKeepPlaying)
                .addGap(8, 8, 8))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBackground, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnKeepPlayingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeepPlayingActionPerformed
        //Open LeaderBoard
        openLeaderboard();
        //Close this jFrame
        dispose();
    }//GEN-LAST:event_btnKeepPlayingActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameOver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameOver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameOver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameOver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameOver(0,0).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKeepPlaying;
    private javax.swing.JLabel lblGameOver;
    private javax.swing.JLabel lblIcon;
    private javax.swing.JLabel lblPinsLeft;
    private javax.swing.JLabel lblScore;
    private javax.swing.JPanel panelBackground;
    // End of variables declaration//GEN-END:variables
}
